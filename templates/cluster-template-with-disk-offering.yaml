---
apiVersion: cluster.x-k8s.io/v1beta1
kind: Cluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  clusterNetwork:
    pods:
      cidrBlocks:
        - 192.168.0.0/16
    serviceDomain: cluster.local
  infrastructureRef:
    apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
    kind: CloudStackCluster
    name: ${CLUSTER_NAME}
  controlPlaneRef:
    kind: KubeadmControlPlane
    apiVersion: controlplane.cluster.x-k8s.io/v1beta1
    name: ${CLUSTER_NAME}-control-plane
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: CloudStackCluster
metadata:
  name: ${CLUSTER_NAME}
spec:
  controlPlaneEndpoint:
    host: ${CLUSTER_ENDPOINT_IP}
    port: ${CLUSTER_ENDPOINT_PORT}
  zones:
  - name : ${CLOUDSTACK_ZONE_NAME}
    network: 
      name: ${CLOUDSTACK_NETWORK_NAME}
---
apiVersion: controlplane.cluster.x-k8s.io/v1beta1
kind: KubeadmControlPlane
metadata:
  name: "${CLUSTER_NAME}-control-plane"
spec:
  kubeadmConfigSpec:
    clusterConfiguration:
      imageRepository: k8s.gcr.io
    initConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          provider-id: "cloudstack:///'{{ ds.meta_data.instance_id }}'"
        name: '{{ local_hostname }}'
    joinConfiguration:
      nodeRegistration:
        kubeletExtraArgs:
          provider-id: "cloudstack:///'{{ ds.meta_data.instance_id }}'"
        name: '{{ local_hostname }}'
        ignorePreflightErrors:
          - DirAvailable--etc-kubernetes-manifests
    preKubeadmCommands:
      - swapoff -a
    diskSetup:
      filesystems:
        - device: ${CLOUDSTACK_DISK_OFFERING_DEVICE}1
          overwrite: false
          extraOpts:
            - -E
            - lazy_itable_init=1,lazy_journal_init=1
          filesystem: ${CLOUDSTACK_DISK_OFFERING_FILESYSTEM}
          label: data_disk
      partitions:
        - device: ${CLOUDSTACK_DISK_OFFERING_DEVICE}
          layout: true
          overwrite: false
          tableType: gpt
    mounts:
      - - LABEL=${CLOUDSTACK_DISK_OFFERING_LABEL}
        - ${CLOUDSTACK_DISK_OFFERING_MOUNT_PATH}
  machineTemplate:
    infrastructureRef:
      kind: CloudStackMachineTemplate
      apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
      name: "${CLUSTER_NAME}-control-plane"
  replicas: ${CONTROL_PLANE_MACHINE_COUNT}
  version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: CloudStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-control-plane
spec:
  template:
    spec:
      offering: 
        name: ${CLOUDSTACK_CONTROL_PLANE_MACHINE_OFFERING}
      template: 
        name: ${CLOUDSTACK_TEMPLATE_NAME}
---
apiVersion: cluster.x-k8s.io/v1beta1
kind: MachineDeployment
metadata:
  name: "${CLUSTER_NAME}-md-0"
spec:
  clusterName: "${CLUSTER_NAME}"
  replicas: ${WORKER_MACHINE_COUNT}
  selector:
    matchLabels: null
  template:
    spec:
      bootstrap:
        configRef:
          apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
          kind: KubeadmConfigTemplate
          name: "${CLUSTER_NAME}-md-0"
      clusterName: "${CLUSTER_NAME}"
      infrastructureRef:
        name: "${CLUSTER_NAME}-md-0"
        apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
        kind: CloudStackMachineTemplate
      version: ${KUBERNETES_VERSION}
---
apiVersion: infrastructure.cluster.x-k8s.io/v1beta1
kind: CloudStackMachineTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      offering: 
        name: ${CLOUDSTACK_WORKER_MACHINE_OFFERING}
      template: 
        name: ${CLOUDSTACK_TEMPLATE_NAME}
---
apiVersion: bootstrap.cluster.x-k8s.io/v1beta1
kind: KubeadmConfigTemplate
metadata:
  name: ${CLUSTER_NAME}-md-0
spec:
  template:
    spec:
      joinConfiguration:
        nodeRegistration:
          kubeletExtraArgs:
            provider-id: "cloudstack:///'{{ ds.meta_data.instance_id }}'"
          name: '{{ local_hostname }}'
      preKubeadmCommands:
        - swapoff -a
      diskSetup:
        filesystems:
          - device: ${CLOUDSTACK_DISK_OFFERING_DEVICE}1
            overwrite: false
            extraOpts:
              - -E
              - lazy_itable_init=1,lazy_journal_init=1
            filesystem: ${CLOUDSTACK_DISK_OFFERING_FILESYSTEM}
            label: data_disk
        partitions:
          - device: ${CLOUDSTACK_DISK_OFFERING_DEVICE}
            layout: true
            overwrite: false
            tableType: gpt
      mounts:
        - - LABEL=${CLOUDSTACK_DISK_OFFERING_LABEL}
          - ${CLOUDSTACK_DISK_OFFERING_MOUNT_PATH}
